/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { DomiciliationWhereUniqueInput } from "../../domiciliation/base/DomiciliationWhereUniqueInput";
import { Type } from "class-transformer";
import { TransferWhereUniqueInput } from "../../transfer/base/TransferWhereUniqueInput";

@InputType()
class AddressCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  complement?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  inseeCog?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  precision1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  precision_2?: string | null;

  @ApiProperty({
    required: false,
    type: () => DomiciliationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DomiciliationWhereUniqueInput)
  @IsOptional()
  @Field(() => DomiciliationWhereUniqueInput, {
    nullable: true,
  })
  principalAddresses?: DomiciliationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TransferWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TransferWhereUniqueInput)
  @IsOptional()
  @Field(() => TransferWhereUniqueInput, {
    nullable: true,
  })
  secondaryAddresses?: TransferWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  town?: string | null;
}

export { AddressCreateInput as AddressCreateInput };
