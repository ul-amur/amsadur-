/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DialListRelationFilter } from "../../dial/base/DialListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DomiciliationWhereUniqueInput } from "../../domiciliation/base/DomiciliationWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { TransferWhereUniqueInput } from "../../transfer/base/TransferWhereUniqueInput";
import { StructureWhereUniqueInput } from "../../structure/base/StructureWhereUniqueInput";

@InputType()
class EmployeeWhereInput {
  @ApiProperty({
    required: false,
    type: () => DialListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DialListRelationFilter)
  @IsOptional()
  @Field(() => DialListRelationFilter, {
    nullable: true,
  })
  contacts?: DialListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DomiciliationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DomiciliationWhereUniqueInput)
  @IsOptional()
  @Field(() => DomiciliationWhereUniqueInput, {
    nullable: true,
  })
  domiciliation?: DomiciliationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  email?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => TransferWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TransferWhereUniqueInput)
  @IsOptional()
  @Field(() => TransferWhereUniqueInput, {
    nullable: true,
  })
  relocation?: TransferWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => StructureWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StructureWhereUniqueInput)
  @IsOptional()
  @Field(() => StructureWhereUniqueInput, {
    nullable: true,
  })
  structure?: StructureWhereUniqueInput;
}

export { EmployeeWhereInput as EmployeeWhereInput };
